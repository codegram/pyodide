diff --git a/src/electionguard/group.py b/src/electionguard/group.py
index 5035a90..401f1a8 100644
--- a/src/electionguard/group.py
+++ b/src/electionguard/group.py
@@ -5,7 +5,51 @@
 from typing import Any, Final, NamedTuple, Optional, Union
 from base64 import b16decode
 from secrets import randbelow
-from gmpy2 import mpz, powmod, invert, to_binary, from_binary
+
+#from gmpy2 import mpz, powmod, invert, to_binary, from_binary
+
+"""
+Pure-python gmyp2 alternative type
+"""
+mpz = int
+
+
+def powmod(a: int, b: int, c: int) -> int:
+    """
+    Pure-python gmyp2 alternative method
+    """
+    return pow(a, b, c)
+
+
+def invert(a: int, b: int) -> int:
+    """
+    Pure-python gmyp2 alternative method
+    """
+    b0 = b
+    x0, x1, y0, y1 = 0, 1, 1, 0
+    while a != 0:
+        (q, a), b = divmod(b, a), a
+        y0, y1 = y1, y0 - q * y1
+        x0, x1 = x1, x0 - q * x1
+
+    if b != 1:
+        raise Exception("gcd(a, b) != 1")
+    return x0 % b0
+
+
+def to_binary(i: int) -> bytes:
+    """
+    Pure-python gmyp2 alternative method
+    """
+    return i.to_bytes((i.bit_length() + 7) // 8, byteorder="big")
+
+
+def from_binary(bytes: bytes) -> int:
+    """
+    Pure-python gmyp2 alternative method
+    """
+    return int.from_bytes(bytes, byteorder="big")
+

 # Constants used by ElectionGuard
 Q: Final[int] = pow(2, 256) - 189
@@ -75,7 +119,7 @@ class ElementModQ(NamedTuple):
         ) and eq_elems(self, other)

     def __str__(self) -> str:
-        return self.elem.digits()
+        return str(self.elem)  # .digits()


 class ElementModP(NamedTuple):
@@ -135,7 +179,7 @@ class ElementModP(NamedTuple):
         ) and eq_elems(self, other)

     def __str__(self) -> str:
-        return self.elem.digits()
+        return str(self.elem)  # .digits()


 # Common constants