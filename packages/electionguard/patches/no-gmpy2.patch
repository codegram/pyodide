diff --git a/src/electionguard/group.py b/src/electionguard/group.py
index 95d8fe5..4baf7ae 100644
--- a/src/electionguard/group.py
+++ b/src/electionguard/group.py
@@ -4,7 +4,31 @@
 
 from typing import Any, Final, NamedTuple, Optional, Union
 from secrets import randbelow
-from gmpy2 import mpz, powmod, invert, to_binary, from_binary
+#from gmpy2 import mpz, powmod, invert, to_binary, from_binary
+
+def mpz(i: int) -> int:
+  return i
+
+def powmod(a,b,c) -> int:
+  return pow(a,b,c)
+
+def invert(a: int, b: int) -> int:
+    b0 = b
+    x0, x1, y0, y1 = 0, 1, 1, 0
+    while a != 0:
+      (q, a), b = divmod(b, a), a
+      y0, y1 = y1, y0 - q * y1
+      x0, x1 = x1, x0 - q * x1
+
+    if b != 1:
+        raise Exception('gcd(a, b) != 1')
+    return x0 % b0
+
+def to_binary(i: int):
+  return i.to_bytes()
+
+def from_binary(bytes):
+  return i.from_bytes(bytes)
 
 # Constants used by ElectionGuard
 Q: Final[int] = pow(2, 256) - 189
@@ -57,7 +81,7 @@ class ElementModQ(NamedTuple):
         ) and eq_elems(self, other)
 
     def __str__(self) -> str:
-        return self.elem.digits()
+        return str(self.elem) #.digits()
 
 
 class ElementModP(NamedTuple):
@@ -107,7 +131,7 @@ class ElementModP(NamedTuple):
         ) and eq_elems(self, other)
 
     def __str__(self) -> str:
-        return self.elem.digits()
+        return str(self.elem) #.digits()
 
 
 # Common constants
